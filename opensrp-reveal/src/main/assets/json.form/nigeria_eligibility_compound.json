{
  "count": "1",
  "encounter_type": "eligibility_compound",
  "entity_id": "",
  "metadata": {
    "start": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "concept",
      "openmrs_data_type": "start",
      "openmrs_entity_id": "163137AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    },
    "end": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "concept",
      "openmrs_data_type": "end",
      "openmrs_entity_id": "163138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    },
    "today": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "encounter",
      "openmrs_entity_id": "encounter_date"
    },
    "deviceid": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "concept",
      "openmrs_data_type": "deviceid",
      "openmrs_entity_id": "163149AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    },
    "subscriberid": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "concept",
      "openmrs_data_type": "subscriberid",
      "openmrs_entity_id": "163150AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    },
    "simserial": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "concept",
      "openmrs_data_type": "simserial",
      "openmrs_entity_id": "163151AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    },
    "phonenumber": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "concept",
      "openmrs_data_type": "phonenumber",
      "openmrs_entity_id": "163152AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    },
    "encounter_location": ""
  },
  "step1": {
    "title": "Eligibility Compound & Registration",
    "display_back_button": "true",
    "fields": [
      {
        "key": "eligibleRes",
        "openmrs_entity_parent": "",
        "openmrs_entity": "",
        "openmrs_entity_id": "",
        "type": "native_radio",
        "label": "Is this structure residential?",
        "options": [
          {
            "key": "1",
            "text": "Yes"
          },
          {
            "key": "0",
            "text": "No"
          }
        ],
        "v_required": {
          "value": true,
          "err": "This field is required"
        }
      },
      {
        "key": "compoundPart",
        "openmrs_entity_parent": "",
        "openmrs_entity": "",
        "openmrs_entity_id": "",
        "type": "native_radio",
        "label": "Is this structure part of a compound?",
        "options": [
          {
            "key": "1",
            "text": "Yes"
          },
          {
            "key": "0",
            "text": "No"
          }
        ],
        "v_required": {
          "value": true,
          "err": "This field is required"
        }
      },
      {
        "key": "withinCompound",
        "openmrs_entity_parent": "",
        "openmrs_entity": "",
        "openmrs_entity_id": "",
        "type": "native_radio",
        "label": "Is this the main structure within this compound?",
        "options": [
          {
            "key": "1",
            "text": "Yes"
          },
          {
            "key": "0",
            "text": "No"
          }
        ],
        "v_required": {
          "value": true,
          "err": "This field is required"
        }
      },
      {
        "key": "nameOfHeadCompound",
        "openmrs_entity_parent": "",
        "openmrs_entity": "",
        "openmrs_entity_id": "",
        "type": "edit_text",
        "hint": "Name of head of compound?",
        "v_required": {
          "value": true,
          "err": "This field is required"
        },
        "relevance": {
          "step1:compoundPart": {
            "type": "string",
            "ex": "equalTo(., \"1\")"
          }
        }
      },
      {
        "key": "numCompoundStructures",
        "openmrs_entity_parent": "",
        "openmrs_entity": "",
        "openmrs_entity_id": "",
        "type": "edit_text",
        "hint": "How many structures are in this compound?",
        "text_size": "8sp",
        "v_numeric_integer": {
          "value": "true",
          "err": "Please enter a number of structures"
        },
        "v_required": {
          "value": true,
          "err": "This field is required"
        },
        "relevance": {
          "step1:compoundPart": {
            "type": "string",
            "ex": "equalTo(., \"1\")"
          }
        }
      },
      {
        "key": "eligibleStr",
        "label": "Is this structure eligible?",
        "type": "native_radio",
        "openmrs_entity_parent": "",
        "openmrs_entity": "",
        "openmrs_entity_id": "",
        "options": [
          {
            "key": "1",
            "text": "Yes"
          },
          {
            "key": "0",
            "text": "No"
          }
        ],
        "v_required": {
          "value": true,
          "err": "This field is required"
        }
      },
      {
        "key": "reasonsEligibility",
        "openmrs_entity_parent": "",
        "openmrs_entity": "",
        "openmrs_entity_id": "",
        "type": "check_box",
        "label": "Reasons why this structure is ineligible?",
        "combine_checkbox_option_values": "true",
        "text_size": "8sp",
        "options": [
          {
            "key": "resNoChildren",
            "text": "Residential: No children between 3-59 months"
          },
          {
            "key": "resUnoccupied",
            "text": "Residential: Unoccupied"
          },
          {
            "key": "resUnderConstruction",
            "text": "Residential: Under construction"
          },
          {
            "key": "otherReason",
            "text": "Other Reason - specify"
          }
        ],
        "v_required": {
          "value": true,
          "err": "Required field"
        },
        "relevance": {
          "step1:eligibleStr": {
            "type": "string",
            "ex": "equalTo(., \"0\")"
          }
        }
      },
      {
        "key": "smc_qr_code",
        "openmrs_entity_parent": "",
        "openmrs_entity": "",
        "openmrs_entity_id": "",
        "type": "barcode",
        "barcode_type": "qrcode",
        "hint": "What is the SMC number for this compound?",
        "scanButtonText": "Scan SMC Code",
        "v_numeric": {
          "value": "true",
          "err": "Please scan QR"
        },
        "v_required": {
          "value": "true",
          "err": "Please scan QR"
        }
      }
    ]
  }
}

